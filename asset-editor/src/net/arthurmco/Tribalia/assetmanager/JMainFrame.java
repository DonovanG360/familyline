/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.arthurmco.Tribalia.assetmanager;

import java.io.File;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Enumeration;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.ListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author arthurmco
 */
public class JMainFrame extends javax.swing.JFrame 
    implements ListSelectionListener {

    DefaultListModel<Asset> lmodel = new DefaultListModel<>();
    /**
     * Creates new form JMainFrame
     */
    public JMainFrame() {
        initComponents();
    }

    
    
    AssetVirtualFolder aRoot = new AssetVirtualFolder("root");
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        pnlAssetInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtAssetName = new javax.swing.JTextField();
        txtAssetPath = new javax.swing.JTextField();
        btnApplyAsset = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstAssets = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tribalia Asset Editor");

        btnAdd.setLabel("+");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setLabel("-");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        pnlAssetInfo.setBackground(new java.awt.Color(234, 234, 234));

        jLabel1.setText("Asset path:");

        jLabel2.setText("Asset name:");

        txtAssetPath.setToolTipText("");

        btnApplyAsset.setText("OK");
        btnApplyAsset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyAssetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAssetInfoLayout = new javax.swing.GroupLayout(pnlAssetInfo);
        pnlAssetInfo.setLayout(pnlAssetInfoLayout);
        pnlAssetInfoLayout.setHorizontalGroup(
            pnlAssetInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAssetInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAssetInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(14, 14, 14)
                .addGroup(pnlAssetInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAssetName, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAssetPath, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAssetInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApplyAsset)
                .addGap(38, 38, 38))
        );
        pnlAssetInfoLayout.setVerticalGroup(
            pnlAssetInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAssetInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAssetInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAssetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAssetInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAssetPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(35, 35, 35)
                .addComponent(btnApplyAsset)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lstAssets.setModel(lmodel);
        jScrollPane2.setViewportView(lstAssets);

        jButton1.setText("Save Asset File");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlAssetInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnRemove)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlAssetInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void expandAllNodes(JTree tree) {
        TreeNode root = (TreeNode) tree.getModel().getRoot();
        tree.expandPath(new TreePath(root));
    }
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        JFileChooser jfc = new JFileChooser();
        int ret = jfc.showDialog(this, "Add");
        
        if (ret == JFileChooser.APPROVE_OPTION) {
            Asset a = AssetLoader.Load("", jfc.getSelectedFile().getPath());
               
               if (a == null) {
                   JOptionPane.showMessageDialog(this, "Invalid asset format", 
                           "Error", JOptionPane.ERROR_MESSAGE);
                   return;
               }
               
            String aname = JOptionPane.showInputDialog(this, "Asset name:");
            if (aname != null) {
               a.setName(aname);
               
               //aRoot.add(a);
               lmodel.addElement(a);
               
            }
        }
        
        
        //expandAllNodes(jTreeAssets);
        
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        lmodel.removeElementAt(lstAssets.getSelectedIndex());
        
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnApplyAssetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyAssetActionPerformed
        Asset a = lmodel.get(lstAssets.getSelectedIndex());
        a.setName(txtAssetName.getText());
        
        
        switch (a.getType()) {
            case Asset.TYPE_TEXTURE:
                Texture t = (Texture) a;
                t.setFile(txtAssetPath.getText());
                
                break;
            case Asset.TYPE_MESH:
                Mesh m = (Mesh) a;
                m.setFile(txtAssetPath.getText());
                
                break;
                
            
        }
        
    }//GEN-LAST:event_btnApplyAssetActionPerformed

    String fileOut = null;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Enumeration<Asset> listA = lmodel.elements();
        
        if (fileOut == null) {
            JFileChooser fs = new JFileChooser();
            if (fs.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                fileOut = fs.getSelectedFile().getPath();
            }
        }
        
        PrintWriter wfile;
        try {
            wfile = new PrintWriter(fileOut);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;            
        }
        
        while (listA.hasMoreElements()) {
            Asset a = listA.nextElement();
            wfile.println(a.getName() + " {");
            wfile.println("\ttype: " + a.getType());
            String relpath;
            
            switch (a.getType()) {
                case Asset.TYPE_TEXTURE:
                Texture t = (Texture) a;
                
                /* Write a relative path */
                relpath = new File(fileOut).getParentFile().toURI().
                        relativize(new File(t.getFile()).toURI()).getPath();
                
                wfile.println("\tpath: " + relpath);
                
                break;
            case Asset.TYPE_MESH:
                Mesh m = (Mesh) a;
                txtAssetPath.setText(m.getFile());
                
                relpath = new File(fileOut).getParentFile().toURI().
                        relativize(new File(m.getFile()).toURI()).getPath();
                
                wfile.println("\tpath: " + relpath);
                
                break;
            }
            
            wfile.println("}\n");
        }
        
        wfile.flush();
        wfile.close();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    public void run() {
        pnlAssetInfo.setVisible(false);
      
        lstAssets.addListSelectionListener(this);
        
        setVisible(true);
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        Asset a = lmodel.get(lstAssets.getSelectedIndex());
       
        pnlAssetInfo.setVisible(true);
        txtAssetName.setText(a.getName());
        
        switch (a.getType()) {
            case Asset.TYPE_TEXTURE:
                Texture t = (Texture) a;
                txtAssetPath.setText(t.getFile());
                
                break;
            case Asset.TYPE_MESH:
                Mesh m = (Mesh) a;
                txtAssetPath.setText(m.getFile());
                
                break;
                
            
        }
        
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnApplyAsset;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<Asset> lstAssets;
    private javax.swing.JPanel pnlAssetInfo;
    private javax.swing.JTextField txtAssetName;
    private javax.swing.JTextField txtAssetPath;
    // End of variables declaration//GEN-END:variables
}
